{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/ModelUploadComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IconButton, Modal } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Row, Col, Container, Progress } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModelUpload(props) {\n  _s();\n\n  const [dfile, setFile] = useState(''); // storing the uploaded file\n\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0); // tracking the status of uploading\n\n  const [message, setMessage] = useState(\"Please upload your model\");\n  const el = useRef(); // accesing input element\n  // It is for get the uploaded file you selected\n\n  const handleChange = event => {\n    const file = event.target.files[0]; // accessing file\n\n    console.log(file);\n    setFile(file); // storing file\n\n    uploadFile(file);\n  };\n\n  const uploadFile = file => {\n    setProgress(0);\n    const formData = new FormData();\n    formData.append('username', file, sessionStorage.getItem('verifiedUsername'));\n    formData.append('file', file); // appending file\n\n    console.log(\"formdata:\", formData);\n    setCurrentFile(file); // 'props.uploadModel' is from Redux actionCreators, which is used to post the uploaded model to the backend server\n\n    props.uploadModel(formData, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }, sessionStorage.getItem('verifiedUsername')).then(() => {\n      setMessage(\"Uploaded successfully\");\n    }).catch(() => {\n      setProgress(0);\n      setMessage(\"Could not upload the file!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file-upload\",\n          id: \"file-upload\",\n          ref: el,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"upload a model\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(PublishIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light\",\n          role: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentFile && /*#__PURE__*/_jsxDEV(Progress, {\n        animated: true,\n        value: progress,\n        max: \"100\",\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModelUpload, \"y5qxsaVxrIKYDhmDQZA8wtHux0o=\");\n\n_c = ModelUpload;\nexport default ModelUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelUpload\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/ModelUploadComponent.js"],"names":["React","useRef","useState","useEffect","axios","IconButton","Modal","PublishIcon","Row","Col","Container","Progress","ModelUpload","props","dfile","setFile","selectedFiles","setSelectedFiles","undefined","currentFile","setCurrentFile","progress","setProgress","message","setMessage","el","handleChange","event","file","target","files","console","log","uploadFile","formData","FormData","append","sessionStorage","getItem","uploadModel","Math","round","loaded","total","then","catch"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { IconButton, Modal } from '@material-ui/core';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Row, Col, Container, Progress } from 'reactstrap';\r\n\r\nfunction ModelUpload(props) {\r\n    const [dfile, setFile] = useState(''); // storing the uploaded file\r\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n    const [currentFile, setCurrentFile] = useState(undefined);\r\n    const [progress, setProgress] = useState(0); // tracking the status of uploading\r\n    const [message, setMessage] = useState(\"Please upload your model\");\r\n    const el = useRef(); // accesing input element\r\n\r\n    // It is for get the uploaded file you selected\r\n    const handleChange = (event) => {\r\n        const file = event.target.files[0]; // accessing file\r\n        console.log(file);\r\n        setFile(file); // storing file\r\n        uploadFile(file);\r\n    }\r\n\r\n    const uploadFile = (file) => {\r\n        setProgress(0);\r\n\r\n        const formData = new FormData();\r\n        formData.append('username', file, sessionStorage.getItem('verifiedUsername'));\r\n        formData.append('file', file); // appending file\r\n        \r\n        console.log(\"formdata:\", formData);\r\n\r\n        setCurrentFile(file);\r\n\r\n        // 'props.uploadModel' is from Redux actionCreators, which is used to post the uploaded model to the backend server\r\n        props.uploadModel(formData, (event) => {\r\n            setProgress(Math.round((100 * event.loaded) / event.total));\r\n        }, sessionStorage.getItem('verifiedUsername')).then(() => {\r\n            setMessage(\"Uploaded successfully\");\r\n        })\r\n        .catch(() => {\r\n            setProgress(0);\r\n            setMessage(\"Could not upload the file!\");\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <div className=\"md-2\">\r\n                    {/*TODO: users may only be allowed to upload .dat => <input> needs to add accept=\".dat* ref={el} */}\r\n                    <input type=\"file\" className=\"file-upload\" id=\"file-upload\" ref={el} onChange={handleChange} />\r\n                    <label htmlFor=\"file-upload\">\r\n                        <IconButton aria-label=\"upload a model\" component=\"span\">\r\n                            <PublishIcon />\r\n                        </IconButton>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"alert alert-light\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n\r\n\r\n            <div>\r\n                {currentFile && (<Progress animated value={progress} max=\"100\">{progress}%</Progress>)}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ModelUpload;\r\n\r\n"]},"metadata":{},"sourceType":"module"}