{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { emptyMetadata } from './metadataEmpty';\nexport const Metadata = (state = {\n  isLoading: true,\n  errMess: null,\n  metadata: emptyMetadata\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_METADATA:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        metadata: action.payload\n      };\n\n    case ActionTypes.METADATA_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        metadata: emptyMetadata\n      };\n\n    case ActionTypes.METADATA_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Metadata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metadata\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/redux/metadata.js"],"names":["ActionTypes","emptyMetadata","Metadata","state","isLoading","errMess","metadata","action","type","ADD_METADATA","payload","METADATA_LOADING","METADATA_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG;AAC7BC,EAAAA,SAAS,EAAE,IADkB;AAE7BC,EAAAA,OAAO,EAAE,IAFoB;AAG7BC,EAAAA,QAAQ,EAAEL;AAHmB,CAAT,EAIrBM,MAJqB,KAIV;AAEV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,YAAjB;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAE,IAAvC;AAA6CC,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAA9D,OAAP;;AAEJ,SAAKV,WAAW,CAACW,gBAAjB;AACI,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,QAAQ,EAAEL;AAAtD,OAAP;;AAEJ,SAAKD,WAAW,CAACY,eAAjB;AACI,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA9C,OAAP;;AAEJ;AACI,aAAOP,KAAP;AAXR;AAaH,CAnBM;KAAMD,Q","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport {emptyMetadata} from './metadataEmpty';\r\n\r\nexport const Metadata = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    metadata: emptyMetadata\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_METADATA:\r\n            return { ...state, isLoading: false, errMess: null, metadata: action.payload };\r\n\r\n        case ActionTypes.METADATA_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, metadata: emptyMetadata }\r\n\r\n        case ActionTypes.METADATA_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}