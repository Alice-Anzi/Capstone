{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Paper, Avatar, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { questions } from '../others/constants';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { signUp, updateUser } from '../redux/ActionCreators';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Col, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: (data, cb) => {\n    dispatch(signUp(data, cb));\n  }\n});\n\nconst Signup = props => {\n  _s();\n\n  const paperStyle = {\n    padding: 20,\n    height: '90vh auto',\n    margin: \"20px auto\"\n  };\n  let myStyle = {\n    color: '#6495ED',\n    fontSize: '48px',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  };\n  let username = {\n    margin: '10px'\n  };\n  let password = {\n    margin: '10px'\n  };\n  let confirmpassword = {\n    margin: '10px'\n  };\n  let button = {\n    margin: '20px',\n    fontSize: '24px'\n  };\n  const initialValues = {\n    password: '',\n    confirmpassword: '',\n    email: '',\n    question: questions[0],\n    answer: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required(\"*Required!\"),\n    password: Yup.string().min(8, \"The password length should be at least 8 digits \").required(\"*Required!\"),\n    confirmpassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matched\").required(\"*Required!\"),\n    question: Yup.string().required(\"*Required!\"),\n    answer: Yup.string().required(\"*Required!\")\n  });\n  const [isModalOpen, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen);\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n    props.signUp(values, res => {\n      setModal(true);\n      console.log(res);\n      setModalContent(res.toString());\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 10,\n    style: paperStyle,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: myStyle,\n        children: \" SOM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: \"Please register your own account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          id: \"outlined-email-input\",\n          name: \"email\",\n          label: \"username\",\n          type: \"search\",\n          autoComplete: \"current-password\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'red'\n              },\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }, this),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: password,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            id: \"outlined-password-input\",\n            name: \"password\",\n            label: \"password\",\n            type: \"password\",\n            autoComplete: \"current-password\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red'\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 24\n            }, this),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: confirmpassword,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            id: \"outlined-confirmpassword-input\",\n            name: \"confirmpassword\",\n            label: \"confirm password\",\n            type: \"password\",\n            autoComplete: \"current-password\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"confirmpassword\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red'\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 24\n            }, this),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: username,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            as: props => /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: 195\n              },\n              ...props,\n              children: questions.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 39\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 35\n            }, this),\n            name: \"question\",\n            label: \"question\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"question\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red'\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 24\n            }, this),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: username,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            id: \"outlined-answer-input\",\n            name: \"answer\",\n            label: \"answer\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"answer\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red'\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 24\n            }, this),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: button,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: modalContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handlenNoBtn,\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"7QF6Bw0gVWWsAUA6fMZF6THhFy4=\");\n\n_c = Signup;\nexport default withRouter(connect(null, mapDispatchToProps)(Signup));\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/Signup.js"],"names":["React","useState","Grid","Paper","Avatar","Typography","TextField","Select","Button","Link","Formik","Field","Form","ErrorMessage","Yup","makeStyles","questions","MenuItem","signUp","updateUser","withRouter","connect","Col","Modal","ModalBody","ModalHeader","Row","mapDispatchToProps","dispatch","data","cb","Signup","props","paperStyle","padding","height","margin","myStyle","color","fontSize","fontWeight","fontStyle","username","password","confirmpassword","button","initialValues","email","question","answer","validationSchema","object","shape","string","required","min","oneOf","ref","isModalOpen","setModal","modalContent","setModalContent","handlenNoBtn","onSubmit","values","console","log","res","toString","msg","width","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Grid, Paper, Avatar, Typography} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport {Formik, Field, Form, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {questions} from '../others/constants'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nimport {\r\n  signUp, updateUser\r\n} from '../redux/ActionCreators';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUp: (data, cb) => {\r\n    dispatch(signUp(data, cb))\r\n  },\r\n});\r\n\r\nconst Signup = (props) => {\r\n  const paperStyle = {padding: 20, height: '90vh auto', margin: \"20px auto\"}\r\n  let myStyle = {\r\n    color: '#6495ED',\r\n    fontSize: '48px',\r\n    fontWeight: 'bold',\r\n    fontStyle: 'italic'\r\n  }\r\n  let username = {\r\n    margin: '10px',\r\n  }\r\n  let password = {\r\n    margin: '10px'\r\n  }\r\n  let confirmpassword = {\r\n    margin: '10px'\r\n  }\r\n  let button = {\r\n    margin: '20px',\r\n    fontSize: '24px',\r\n  }\r\n  const initialValues = {\r\n    password: '',\r\n    confirmpassword: '',\r\n    email: '',\r\n    question: questions[0],\r\n    answer: '',\r\n  }\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"*Required!\"),\r\n    password: Yup.string().min(8, \"The password length should be at least 8 digits \").required(\"*Required!\"),\r\n    confirmpassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matched\").required(\"*Required!\"),\r\n    question: Yup.string().required(\"*Required!\"),\r\n    answer: Yup.string().required(\"*Required!\"),\r\n  })\r\n\r\n  const [isModalOpen, setModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState('');\r\n\r\n  const handlenNoBtn = () => {\r\n    setModal(!isModalOpen);\r\n  };\r\n\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values)\r\n    props.signUp(values, res => {\r\n      setModal(true)\r\n      console.log(res);\r\n      setModalContent(res.toString())\r\n    })\r\n  }\r\n  return (\r\n\r\n    <Paper elevation={10} style={paperStyle}>\r\n      <Grid>\r\n        <div style={myStyle}> SOM</div>\r\n        <h3>Sign Up</h3>\r\n        <Typography variant='caption'>Please register your own account</Typography>\r\n      </Grid>\r\n\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field as={TextField}\r\n                   id=\"outlined-email-input\"\r\n                   name=\"email\"\r\n                   label=\"username\"\r\n                   type=\"search\"\r\n                   autoComplete=\"current-password\"\r\n                   helperText={\r\n                     <ErrorMessage name=\"email\">\r\n                       {msg => <div style={{color: 'red'}}>{msg}</div>}\r\n                     </ErrorMessage>\r\n                   }\r\n                   variant=\"outlined\"/>\r\n\r\n            <div style={password}>\r\n              <Field as={TextField}\r\n                     id=\"outlined-password-input\"\r\n                     name=\"password\"\r\n                     label=\"password\"\r\n                     type=\"password\"\r\n                     autoComplete=\"current-password\"\r\n                     helperText={\r\n                       <ErrorMessage name=\"password\">\r\n                         {msg => <div style={{color: 'red'}}>{msg}</div>}\r\n                       </ErrorMessage>\r\n                     }\r\n                     variant=\"outlined\"/>\r\n            </div>\r\n            <div style={confirmpassword}>\r\n              <Field as={TextField}\r\n                     id=\"outlined-confirmpassword-input\"\r\n                     name=\"confirmpassword\"\r\n                     label=\"confirm password\"\r\n                     type=\"password\"\r\n                     autoComplete=\"current-password\"\r\n                     helperText={\r\n                       <ErrorMessage name=\"confirmpassword\">\r\n                         {msg => <div style={{color: 'red'}}>{msg}</div>}\r\n                       </ErrorMessage>\r\n                     }\r\n                     variant=\"outlined\"/>\r\n            </div>\r\n\r\n            <div style={username}>\r\n              <Field as={(props)=><Select style={{width:195}} {...props}>\r\n                {questions.map(item=> <MenuItem value={item}>{item}</MenuItem>)}\r\n              </Select>}\r\n                     name=\"question\"\r\n                     label=\"question\"\r\n                     helperText={\r\n                       <ErrorMessage name=\"question\">\r\n                         {msg => <div style={{color: 'red'}}>{msg}</div>}\r\n                       </ErrorMessage>\r\n                     }\r\n                     variant=\"outlined\"/>\r\n            </div>\r\n            <div style={username}>\r\n              <Field as={TextField}\r\n                     id=\"outlined-answer-input\"\r\n                     name=\"answer\"\r\n                     label=\"answer\"\r\n                     helperText={\r\n                       <ErrorMessage name=\"answer\">\r\n                         {msg => <div style={{color: 'red'}}>{msg}</div>}\r\n                       </ErrorMessage>\r\n                     }\r\n                     variant=\"outlined\"/>\r\n            </div>\r\n            <div style={button}>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n\r\n          </Form>\r\n        )}\r\n\r\n\r\n      </Formik>\r\n      <Modal isOpen={isModalOpen} centered={true}>\r\n        <ModalBody>\r\n          <p>{modalContent}</p>\r\n          <Row>\r\n            <Col>\r\n              <Button onClick={handlenNoBtn}>Ok</Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Paper>\r\n\r\n\r\n  )\r\n}\r\nexport default withRouter(connect(null, mapDispatchToProps)(Signup));\r\n"]},"metadata":{},"sourceType":"module"}