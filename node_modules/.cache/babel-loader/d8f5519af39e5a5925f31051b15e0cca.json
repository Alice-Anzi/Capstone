{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Modal, ModalHeader, ModalBody, Row, Col } from 'reactstrap';\nimport { login, updateUser } from '../redux/ActionCreators';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  },\n  updateUser: data => {\n    dispatch(updateUser(data));\n  }\n});\n\nconst Login = ({\n  handleChange,\n  ...props\n}) => {\n  _s();\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh auto',\n    margin: \"20px auto\"\n  };\n  let myStyle = {\n    color: '#6495ED',\n    fontSize: '48px',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  };\n  let root = {\n    '& .MuiTextField-root': {\n      margin: '20ch',\n      width: '25ch'\n    }\n  };\n  let username = {\n    margin: '30px'\n  };\n  let button = {\n    margin: '30px',\n    fontSize: '24px'\n  };\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"*Required!\"),\n    password: Yup.string().required(\"*Required!\")\n  });\n  const [user, setUser] = useState('');\n\n  const onSubmit = values => {\n    console.log(\"check username and password\", values); // save into the local session\n\n    console.log(values.username);\n    sessionStorage.setItem('username', values.username);\n    sessionStorage.setItem('password', values.password);\n    const loginInfo = {\n      username: sessionStorage.getItem('username'),\n      password: sessionStorage.getItem('password')\n    };\n    console.log(\"userInfo \", loginInfo);\n    setUser(loginInfo.username);\n    props.login(loginInfo);\n  };\n\n  const [isModalOpen, setModal] = useState(false);\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen); //location.reload()\n\n    props.updateUser(null);\n  };\n\n  useEffect(() => {\n    console.log(\"helllloo\");\n    console.log(123, sessionStorage.getItem('verifiedUsername'));\n\n    if (sessionStorage.getItem('verifiedUsername') != undefined || sessionStorage.getItem('verifiedUsername') !== null) {\n      props.updateUser(sessionStorage.getItem('verifiedUsername'));\n    }\n\n    if (props.user.userInfo) {\n      console.log(props.user.userInfo);\n\n      if (sessionStorage.getItem('verifiedUsername') === sessionStorage.getItem('username')) {\n        props.history.replace('/');\n      } else {\n        setModal(!isModalOpen);\n      } //弹出一个警示，告诉用户登陆失败\n\n    }\n  }, [props.user.userInfo]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: myStyle,\n        children: \" SOM \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-search\",\n                label: \"username\",\n                name: \"username\",\n                type: \"search\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-password-input\",\n                label: \"Password\",\n                name: \"password\",\n                type: \"password\",\n                autoComplete: \"current-password\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: button,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: button,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" don't have an account yet?\", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            onClick: () => handleChange(\"event\", 1),\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: button,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" forget password?\", /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => props.history.push('/password'),\n            children: \"click here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"warning!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username and password do not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handlenNoBtn,\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Ki7tDqJ7TpJenveUcjVPT+EnMXE=\");\n\n_c = Login;\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/login.js"],"names":["React","useEffect","useState","Grid","Paper","Typography","TextField","makeStyles","Button","Link","Formik","Field","Form","ErrorMessage","Yup","Modal","ModalHeader","ModalBody","Row","Col","login","updateUser","connect","withRouter","mapStateToProps","state","user","mapDispatchToProps","dispatch","data","Login","handleChange","props","paperStyle","padding","height","margin","myStyle","color","fontSize","fontWeight","fontStyle","root","width","username","button","initialValues","password","validationSchema","object","shape","string","required","setUser","onSubmit","values","console","log","sessionStorage","setItem","loginInfo","getItem","isModalOpen","setModal","handlenNoBtn","undefined","userInfo","history","replace","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,GAA7C,QAAwD,YAAxD;AAEA,SACEC,KADF,EACSC,UADT,QAEO,yBAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,KAAK,EAAGS,IAAD,IAAU;AAAED,IAAAA,QAAQ,CAACR,KAAK,CAACS,IAAD,CAAN,CAAR;AAAuB,GADJ;AAEtCR,EAAAA,UAAU,EAAGQ,IAAD,IAAU;AAAED,IAAAA,QAAQ,CAACP,UAAU,CAACQ,IAAD,CAAX,CAAR;AAA4B;AAFd,CAAL,CAAnC;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgB,KAAGC;AAAnB,CAAD,KAAgC;AAAA;;AAC5C,QAAMC,UAAU,GAAG;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,MAAM,EAAE,WAAvB;AAAoCC,IAAAA,MAAM,EAAE;AAA5C,GAAnB;AACA,MAAIC,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE,SADK;AAEZC,IAAAA,QAAQ,EAAE,MAFE;AAGZC,IAAAA,UAAU,EAAE,MAHA;AAIZC,IAAAA,SAAS,EAAE;AAJC,GAAd;AAMA,MAAIC,IAAI,GAAG;AACT,4BAAwB;AACtBN,MAAAA,MAAM,EAAE,MADc;AAEtBO,MAAAA,KAAK,EAAE;AAFe;AADf,GAAX;AAMA,MAAIC,QAAQ,GAAG;AACbR,IAAAA,MAAM,EAAE;AADK,GAAf;AAGA,MAAIS,MAAM,GAAG;AACXT,IAAAA,MAAM,EAAE,MADG;AAEXG,IAAAA,QAAQ,EAAE;AAFC,GAAb;AAIA,QAAMO,aAAa,GAAG;AACpBF,IAAAA,QAAQ,EAAE,EADU;AAEpBG,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAKA,QAAMC,gBAAgB,GAAGlC,GAAG,CAACmC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CN,IAAAA,QAAQ,EAAE9B,GAAG,CAACqC,MAAJ,GAAaC,QAAb,CAAsB,YAAtB,CADgC;AAE1CL,IAAAA,QAAQ,EAAEjC,GAAG,CAACqC,MAAJ,GAAaC,QAAb,CAAsB,YAAtB;AAFgC,GAAnB,CAAzB;AAKA,QAAM,CAAC1B,IAAD,EAAO2B,OAAP,IAAkBnD,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMoD,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C,EAD2B,CAE3B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACX,QAAnB;AACAc,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,MAAM,CAACX,QAA1C;AACAc,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,MAAM,CAACR,QAA1C;AACA,UAAMa,SAAS,GAAG;AAAEhB,MAAAA,QAAQ,EAAEc,cAAc,CAACG,OAAf,CAAuB,UAAvB,CAAZ;AAAgDd,MAAAA,QAAQ,EAAEW,cAAc,CAACG,OAAf,CAAuB,UAAvB;AAA1D,KAAlB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,SAAzB;AACAP,IAAAA,OAAO,CAACO,SAAS,CAAChB,QAAX,CAAP;AACAZ,IAAAA,KAAK,CAACZ,KAAN,CAAYwC,SAAZ;AACD,GAVD;;AAYA,QAAM,CAACE,WAAD,EAAcC,QAAd,IAA0B7D,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM8D,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAC,CAACD,WAAF,CAAR,CADyB,CAEzB;;AACA9B,IAAAA,KAAK,CAACX,UAAN,CAAiB,IAAjB;AACD,GAJD;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACduD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBC,cAAc,CAACG,OAAf,CAAuB,kBAAvB,CAAjB;;AACA,QAAIH,cAAc,CAACG,OAAf,CAAuB,kBAAvB,KAA8CI,SAA9C,IAA2DP,cAAc,CAACG,OAAf,CAAuB,kBAAvB,MAA+C,IAA9G,EAAmH;AACjH7B,MAAAA,KAAK,CAACX,UAAN,CAAiBqC,cAAc,CAACG,OAAf,CAAuB,kBAAvB,CAAjB;AACD;;AAED,QAAI7B,KAAK,CAACN,IAAN,CAAWwC,QAAf,EAAyB;AACvBV,MAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAK,CAACN,IAAN,CAAWwC,QAAvB;;AACA,UAAIR,cAAc,CAACG,OAAf,CAAuB,kBAAvB,MAA+CH,cAAc,CAACG,OAAf,CAAuB,UAAvB,CAAnD,EAAuF;AACrF7B,QAAAA,KAAK,CAACmC,OAAN,CAAcC,OAAd,CAAsB,GAAtB;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAAC,CAACD,WAAF,CAAR;AACD,OANsB,CAOvB;;AAED;AACF,GAjBQ,EAiBN,CAAC9B,KAAK,CAACN,IAAN,CAAWwC,QAAZ,CAjBM,CAAT;AAmBA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,EAAlB;AAAsB,MAAA,KAAK,EAAEjC,UAA7B;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEI,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAES,aAAvB;AAAsC,QAAA,gBAAgB,EAAEE,gBAAxD;AAA0E,QAAA,QAAQ,EAAEM,QAApF;AAAA,kBACItB,KAAD,iBACC,QAAC,IAAD;AAAA,kCACE;AAAA,oCACE;AAAK,cAAA,KAAK,EAAEY,QAAZ;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAEtC,SAAX;AACE,gBAAA,EAAE,EAAC,iBADL;AAEE,gBAAA,KAAK,EAAC,UAFR;AAGE,gBAAA,IAAI,EAAC,UAHP;AAIE,gBAAA,IAAI,EAAC,QAJP;AAKE,gBAAA,UAAU,eACR,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBANJ;AAQE,gBAAA,OAAO,EAAC;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAEA,SAAX;AACE,gBAAA,EAAE,EAAC,yBADL;AAEE,gBAAA,KAAK,EAAC,UAFR;AAGE,gBAAA,IAAI,EAAC,UAHP;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,YAAY,EAAC,kBALf;AAME,gBAAA,UAAU,eACR,QAAC,YAAD;AAAc,kBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAPJ;AASE,gBAAA,OAAO,EAAC;AATV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA4BE;AAAK,YAAA,KAAK,EAAEuC,MAAZ;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAC,WAA9B;AAA0C,cAAA,KAAK,EAAC,SAAhD;AAA0D,cAAA,SAAS,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAHF,eA4CE;AAAK,QAAA,KAAK,EAAEA,MAAZ;AAAA,+BAGE,QAAC,UAAD;AAAA,iEACM,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,GAAX;AAAe,YAAA,OAAO,EAAE,MAAMd,YAAY,CAAC,OAAD,EAAU,CAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cA5CF,eAqDE;AAAK,QAAA,KAAK,EAAEc,MAAZ;AAAA,+BACE,QAAC,UAAD;AAAA,uDACE,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAMb,KAAK,CAACmC,OAAN,CAAcE,IAAd,CAAmB,WAAnB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8DE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEP,WAAf;AAA4B,MAAA,QAAQ,EAAE,IAAtC;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD,CAzJD;;GAAMlC,K;;KAAAA,K;AA2JN,eAAeP,UAAU,CAACD,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CG,KAA7C,CAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Modal, ModalHeader, ModalBody, Row, Col } from 'reactstrap';\r\n\r\nimport {\r\n  login, updateUser\r\n} from '../redux/ActionCreators';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (data) => { dispatch(login(data)) },\r\n  updateUser: (data) => { dispatch(updateUser(data)) },\r\n});\r\n\r\nconst Login = ({ handleChange, ...props }) => {\r\n  const paperStyle = { padding: 20, height: '70vh auto', margin: \"20px auto\" }\r\n  let myStyle = {\r\n    color: '#6495ED',\r\n    fontSize: '48px',\r\n    fontWeight: 'bold',\r\n    fontStyle: 'italic'\r\n  }\r\n  let root = {\r\n    '& .MuiTextField-root': {\r\n      margin: '20ch',\r\n      width: '25ch',\r\n    }\r\n  }\r\n  let username = {\r\n    margin: '30px'\r\n  }\r\n  let button = {\r\n    margin: '30px',\r\n    fontSize: '24px',\r\n  }\r\n  const initialValues = {\r\n    username: '',\r\n    password: ''\r\n\r\n  }\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"*Required!\"),\r\n    password: Yup.string().required(\"*Required!\")\r\n\r\n  })\r\n  const [user, setUser] = useState('')\r\n  const onSubmit = (values) => {\r\n    console.log(\"check username and password\", values)\r\n    // save into the local session\r\n    console.log(values.username)\r\n    sessionStorage.setItem('username', values.username);\r\n    sessionStorage.setItem('password', values.password)\r\n    const loginInfo = { username: sessionStorage.getItem('username'), password: sessionStorage.getItem('password') };\r\n    console.log(\"userInfo \", loginInfo);\r\n    setUser(loginInfo.username);\r\n    props.login(loginInfo);\r\n  }\r\n\r\n  const [isModalOpen, setModal] = useState(false);\r\n\r\n  const handlenNoBtn = () => {\r\n    setModal(!isModalOpen);\r\n    //location.reload()\r\n    props.updateUser(null)\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"helllloo\");\r\n    console.log(123, sessionStorage.getItem('verifiedUsername'));\r\n    if (sessionStorage.getItem('verifiedUsername') != undefined || sessionStorage.getItem('verifiedUsername') !== null){\r\n      props.updateUser(sessionStorage.getItem('verifiedUsername'));\r\n    }\r\n    \r\n    if (props.user.userInfo) {\r\n      console.log(props.user.userInfo);\r\n      if (sessionStorage.getItem('verifiedUsername') === sessionStorage.getItem('username')) {\r\n        props.history.replace('/');\r\n      } else {\r\n        setModal(!isModalOpen);\r\n      }\r\n      //弹出一个警示，告诉用户登陆失败\r\n\r\n    }\r\n  }, [props.user.userInfo])\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <div style={myStyle}> SOM </div>\r\n        <h3>Sign In</h3>\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n          {(props) => (\r\n            <Form>\r\n              <div>\r\n                <div style={username}>\r\n                  <Field as={TextField}\r\n                    id=\"outlined-search\"\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    type=\"search\"\r\n                    helperText={\r\n                      <ErrorMessage name=\"username\" />\r\n                    }\r\n                    variant=\"outlined\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <Field as={TextField}\r\n                    id=\"outlined-password-input\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    helperText={\r\n                      <ErrorMessage name=\"password\" />\r\n                    }\r\n                    variant=\"outlined\" />\r\n                </div>\r\n\r\n              </div>\r\n              <div style={button}>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                  Sign In\r\n                      </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n\r\n\r\n        </Formik>\r\n\r\n        <div style={button}>\r\n\r\n\r\n          <Typography> don't have an account yet?\r\n                <Link href=\"#\" onClick={() => handleChange(\"event\", 1)}>\r\n              Sign up\r\n                </Link>\r\n          </Typography>\r\n        </div>\r\n        <div style={button}>\r\n          <Typography> forget password?\r\n            <Link onClick={() => props.history.push('/password')}>\r\n              click here!\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      <Modal isOpen={isModalOpen} centered={true}>\r\n        <ModalHeader>warning!</ModalHeader>\r\n        <ModalBody>\r\n          <p>Username and password do not match</p>\r\n          <Row>\r\n            <Col>\r\n              <Button onClick={handlenNoBtn}>Ok</Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n"]},"metadata":{},"sourceType":"module"}