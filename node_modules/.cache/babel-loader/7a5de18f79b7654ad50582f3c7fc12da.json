{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/ModelBriefInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, ModalHeader, ModalBody, Button, Row, Col, Input } from 'reactstrap';\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { IconButton, TableRow } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModelBriefInfo(props) {\n  _s();\n\n  const [isModalOpen, setModal] = useState(false);\n  const [briefInfo, setBriefInfo] = useState('');\n  const el = useRef(); // accesing input element\n\n  const toggleModal = () => {\n    setModal(!isModalOpen);\n  }; // while a user chooses not to delete a model\n\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen);\n  }; //while a user chooses to delete a model\n\n\n  const handleYesBtn = () => {\n    console.log(\"filename is \" + props.modelName);\n    props.editModelDescription(props.modelName, briefInfo, sessionStorage.getItem('verifiedUsername'));\n    props.fetchModelFiles(sessionStorage.getItem('verifiedUsername'), false); //props.fetchModelFiles()\n\n    setModal(!isModalOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete a model\",\n      component: \"span\",\n      children: /*#__PURE__*/_jsxDEV(CreateIcon, {\n        onClick: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      toggle: toggleModal,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggleModal,\n        children: \"Model Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            paddingLeft: '2%',\n            paddingRight: '2%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: 'Model description',\n            ref: el,\n            value: briefInfo,\n            onChange: event => setBriefInfo(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            paddingTop: '5%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleYesBtn,\n              style: {\n                backgroundColor: '#378CC6'\n              },\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handlenNoBtn,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModelBriefInfo, \"rJQ83uLV9FP5ap8PqR18iZWgBys=\");\n\n_c = ModelBriefInfo;\nexport default ModelBriefInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelBriefInfo\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/ModelBriefInfo.js"],"names":["Modal","ModalHeader","ModalBody","Button","Row","Col","Input","React","useRef","useState","useEffect","useLayoutEffect","IconButton","TableRow","CreateIcon","ModelBriefInfo","props","isModalOpen","setModal","briefInfo","setBriefInfo","el","toggleModal","handlenNoBtn","handleYesBtn","console","log","modelName","editModelDescription","sessionStorage","getItem","fetchModelFiles","paddingLeft","paddingRight","event","target","value","paddingTop","backgroundColor"],"mappings":"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","sourcesContent":["import { Modal, ModalHeader, ModalBody, Button, Row, Col, Input } from 'reactstrap';\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { IconButton, TableRow } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nfunction ModelBriefInfo(props) {\n    const [isModalOpen, setModal] = useState(false);\n    const [briefInfo, setBriefInfo] = useState('');\n    const el = useRef(); // accesing input element\n\n    const toggleModal = () => {\n        setModal(!isModalOpen);\n    };\n\n    // while a user chooses not to delete a model\n    const handlenNoBtn = () => {\n        setModal(!isModalOpen);\n    };\n\n    //while a user chooses to delete a model\n    const handleYesBtn = () => {\n        console.log(\"filename is \" + props.modelName);\n        props.editModelDescription(props.modelName, briefInfo, sessionStorage.getItem('verifiedUsername'));\n        props.fetchModelFiles(sessionStorage.getItem('verifiedUsername'), false);\n        //props.fetchModelFiles()\n        setModal(!isModalOpen);\n    }\n\n    return (\n        <div>\n            <IconButton aria-label=\"delete a model\" component=\"span\">\n                <CreateIcon onClick={toggleModal} />\n            </IconButton>\n\n            <Modal isOpen={isModalOpen} toggle={toggleModal} centered={true}>\n                <ModalHeader toggle={toggleModal}>Model Description</ModalHeader>\n                <ModalBody>\n                    <Row style={{paddingLeft: '2%', paddingRight: '2%'}}>\n                        <Input placeholder={'Model description'} ref={el} value={briefInfo} onChange={event => setBriefInfo(event.target.value)} />\n                    </Row>\n                    <Row style={{paddingTop: '5%'}}>\n                        <Col>\n                            <Button onClick={handleYesBtn} style={{ backgroundColor: '#378CC6' }}>Yes</Button>\n                        </Col>\n                        <Col>\n                            <Button onClick={handlenNoBtn}>No</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </div>\n\n    );\n}\n\nexport default ModelBriefInfo;\n"]},"metadata":{},"sourceType":"module"}