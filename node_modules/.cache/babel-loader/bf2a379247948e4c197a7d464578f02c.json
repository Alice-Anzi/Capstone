{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/ForgetPasswordComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { questions } from '../others/constants';\nimport { passwordChange } from '../redux/ActionCreators';\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Col, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  passwordChange: (data, cb) => {\n    dispatch(passwordChange(data, cb));\n  }\n});\n\nconst ForgetPassword = ({\n  handleChange,\n  ...props\n}) => {\n  _s();\n\n  const paperStyle = {\n    width: 340,\n    textAlign: 'center',\n    padding: 20,\n    height: '70vh auto',\n    margin: \"10vh auto 0\"\n  };\n  let myStyle = {\n    color: '#6495ED',\n    fontSize: '48px',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  };\n  let username = {\n    margin: '30px'\n  };\n  let button = {\n    margin: '30px',\n    fontSize: '24px'\n  };\n  const initialValues = {\n    username: '',\n    password: '',\n    confirmpassword: '',\n    email: '',\n    question: questions[0],\n    answer: ''\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"*Required!\"),\n    password: Yup.string().min(8, \"The password length should be at least 8 digits \").required(\"*Required!\"),\n    confirmpassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matched\").required(\"*Required!\"),\n    question: Yup.string().required(\"*Required!\"),\n    answer: Yup.string().required(\"*Required!\")\n  });\n  const [isModalOpen, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen);\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n    props.passwordChange(values, res => {\n      console.log(res);\n      setModalContent(res.toString());\n      setModal(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: myStyle,\n        children: \" SOM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-search\",\n                label: \"username\",\n                name: \"username\",\n                type: \"search\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-password-input\",\n                label: \"Password\",\n                name: \"password\",\n                type: \"password\",\n                autoComplete: \"current-password\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-confirmpassword-input\",\n                name: \"confirmpassword\",\n                label: \"confirm password\",\n                type: \"password\",\n                autoComplete: \"current-password\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"confirmpassword\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: props => /*#__PURE__*/_jsxDEV(Select, {\n                  style: {\n                    width: 195\n                  },\n                  ...props,\n                  children: questions.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 43\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 39\n                }, this),\n                name: \"question\",\n                label: \"question\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"question\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-answer-input\",\n                name: \"answer\",\n                label: \"answer\",\n                helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"answer\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: button,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/login',\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Back to login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: modalContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handlenNoBtn,\n                children: \"Ok\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgetPassword, \"7QF6Bw0gVWWsAUA6fMZF6THhFy4=\");\n\n_c = ForgetPassword;\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgetPassword));\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/ForgetPasswordComponent.js"],"names":["React","useState","Grid","Paper","Typography","TextField","Button","Formik","Field","Form","ErrorMessage","Yup","questions","passwordChange","connect","Link","withRouter","Select","MenuItem","Col","Modal","ModalBody","ModalHeader","Row","mapStateToProps","state","user","mapDispatchToProps","dispatch","data","cb","ForgetPassword","handleChange","props","paperStyle","width","textAlign","padding","height","margin","myStyle","color","fontSize","fontWeight","fontStyle","username","button","initialValues","password","confirmpassword","email","question","answer","validationSchema","object","shape","string","required","min","oneOf","ref","isModalOpen","setModal","modalContent","setModalContent","handlenNoBtn","onSubmit","values","console","log","res","toString","msg","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {Grid, Paper, Typography} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Formik, Field, Form, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport {questions} from '../others/constants'\n\nimport {\n  passwordChange\n} from '../redux/ActionCreators';\nimport {connect} from \"react-redux\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Col, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  passwordChange: (data,cb) => {\n    dispatch(passwordChange(data,cb))\n  },\n});\n\nconst ForgetPassword = ({handleChange, ...props}) => {\n  const paperStyle = {width: 340,textAlign:'center', padding: 20, height: '70vh auto', margin: \"10vh auto 0\"}\n  let myStyle = {\n    color: '#6495ED',\n    fontSize: '48px',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  }\n\n  let username = {\n    margin: '30px'\n  }\n  let button = {\n    margin: '30px',\n    fontSize: '24px',\n  }\n  const initialValues = {\n    username: '',\n    password: '',\n    confirmpassword: '',\n    email: '',\n    question: questions[0],\n    answer: '',\n  }\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"*Required!\"),\n    password: Yup.string().min(8, \"The password length should be at least 8 digits \").required(\"*Required!\"),\n    confirmpassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matched\").required(\"*Required!\"),\n    question: Yup.string().required(\"*Required!\"),\n    answer: Yup.string().required(\"*Required!\"),\n  })\n\n  const [isModalOpen, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen);\n  };\n  const onSubmit = (values) => {\n    console.log(values);\n    props.passwordChange(values,(res)=>{\n      console.log(res);\n      setModalContent(res.toString())\n      setModal(true)\n    });\n  }\n\n  return (\n    <Grid>\n      <Paper elevation={10} style={paperStyle}>\n        <div style={myStyle}> SOM</div>\n        <h3>reset password</h3>\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n          {(props) => (\n            <Form>\n              <div>\n                <div style={username}>\n                  <Field as={TextField}\n                         id=\"outlined-search\"\n                         label=\"username\"\n                         name=\"username\"\n                         type=\"search\"\n                         helperText={\n                           <ErrorMessage name=\"username\">\n                           {msg => <div style={{color: 'red'}}>{msg}</div>}\n                           </ErrorMessage>\n                         }\n                         variant=\"outlined\"/>\n                </div>\n\n                <div>\n                  <Field as={TextField}\n                         id=\"outlined-password-input\"\n                         label=\"Password\"\n                         name=\"password\"\n                         type=\"password\"\n                         autoComplete=\"current-password\"\n                         helperText={\n                           <ErrorMessage name=\"password\">\n                           {msg => <div style={{color: 'red'}}>{msg}</div>}\n                           </ErrorMessage>\n                         }\n                         variant=\"outlined\"/>\n                </div>\n                <div style={username}>\n                  <Field as={TextField}\n                         id=\"outlined-confirmpassword-input\"\n                         name=\"confirmpassword\"\n                         label=\"confirm password\"\n                         type=\"password\"\n                         autoComplete=\"current-password\"\n                         helperText={\n                           <ErrorMessage name=\"confirmpassword\">\n                             {msg => <div style={{color: 'red'}}>{msg}</div>}\n                           </ErrorMessage>\n                         }\n                         variant=\"outlined\"/>\n                </div>\n\n                <div style={username}>\n                  <Field as={(props)=><Select style={{width:195}} {...props}>\n                    {questions.map(item=> <MenuItem value={item}>{item}</MenuItem>)}\n                  </Select>}\n                         name=\"question\"\n                         label=\"question\"\n                         helperText={\n                           <ErrorMessage name=\"question\">\n                             {msg => <div style={{color: 'red'}}>{msg}</div>}\n                           </ErrorMessage>\n                         }\n                         variant=\"outlined\"/>\n                </div>\n                <div style={username}>\n                  <Field as={TextField}\n                         id=\"outlined-answer-input\"\n                         name=\"answer\"\n                         label=\"answer\"\n                         helperText={\n                           <ErrorMessage name=\"answer\">\n                             {msg => <div style={{color: 'red'}}>{msg}</div>}\n                           </ErrorMessage>\n                         }\n                         variant=\"outlined\"/>\n                </div>\n              </div>\n              <div style={button}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                  Submit\n                </Button>\n                <Link to={'/login'}> <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                  Back to login\n                </Button></Link>\n              </div>\n            </Form>\n          )}\n\n\n\n        </Formik>\n        <Modal isOpen={isModalOpen} centered={true}>\n          <ModalBody>\n            <p>{modalContent}</p>\n            <Row>\n              <Col>\n                <Button onClick={handlenNoBtn}>Ok</Button>\n              </Col>\n            </Row>\n          </ModalBody>\n      </Modal>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgetPassword));\n"]},"metadata":{},"sourceType":"module"}