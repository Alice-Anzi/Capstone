{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/Modal/AskBindedDatasets.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { IconButton, TableRow } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BindedDatasets from './BindedDatasets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AskBindedDatasets(props) {\n  _s();\n\n  const [isModalOpen, setModal] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!isModalOpen);\n  }; // while a user chooses not to delete a dataset\n\n\n  const handlenNoBtn = () => {\n    setModal(!isModalOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"transparent\",\n        border: 'none',\n        color: \"black\"\n      },\n      onClick: toggleModal,\n      children: props.modelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      toggle: toggleModal,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggleModal,\n        children: \"Binded Datasets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you want to check the binded datasets?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(BindedDatasets, {\n              modelName: props.modelName,\n              bindedDatasets: props.bindedDatasets,\n              getBindedDatasets: props.getBindedDatasets,\n              userName: props.userName,\n              isBindLoading: props.isBindLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handlenNoBtn,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AskBindedDatasets, \"YXchnEZb+5xedukRouy4AeSPFu4=\");\n\n_c = AskBindedDatasets;\nexport default AskBindedDatasets;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskBindedDatasets\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/Modal/AskBindedDatasets.js"],"names":["Modal","ModalHeader","ModalBody","Button","Row","Col","React","useRef","useState","useEffect","useLayoutEffect","IconButton","TableRow","DeleteIcon","BindedDatasets","AskBindedDatasets","props","isModalOpen","setModal","toggleModal","handlenNoBtn","backgroundColor","border","color","modelName","bindedDatasets","getBindedDatasets","userName","isBindLoading"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,GAAhD,EAAqDC,GAArD,QAAgE,YAAhE;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,mBAArC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC,CAACD,WAAF,CAAR;AAEH,GAHD,CAH8B,CAQ9B;;;AACA,QAAMG,YAAY,GAAG,MAAM;AACvBF,IAAAA,QAAQ,CAAC,CAACD,WAAF,CAAR;AACH,GAFD;;AAMA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEI,QAAAA,eAAe,EAAE,aAAnB;AAAkCC,QAAAA,MAAM,EAAE,MAA1C;AAAkDC,QAAAA,KAAK,EAAE;AAAzD,OAAf;AAAmF,MAAA,OAAO,EAAEJ,WAA5F;AAAA,gBAA0GH,KAAK,CAACQ;AAAhH;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEP,WAAf;AAA4B,MAAA,MAAM,EAAEE,WAApC;AAAiD,MAAA,QAAQ,EAAE,IAA3D;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,cAAD;AAAgB,cAAA,SAAS,EAAEH,KAAK,CAACQ,SAAjC;AAA4C,cAAA,cAAc,EAAER,KAAK,CAACS,cAAlE;AACI,cAAA,iBAAiB,EAAET,KAAK,CAACU,iBAD7B;AACgD,cAAA,QAAQ,EAAEV,KAAK,CAACW,QADhE;AAEI,cAAA,aAAa,EAAEX,KAAK,CAACY;AAFzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,GAAD;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAER,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAvCQL,iB;;KAAAA,iB;AAyCT,eAAeA,iBAAf","sourcesContent":["import { Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { IconButton, TableRow } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BindedDatasets from './BindedDatasets';\n\nfunction AskBindedDatasets(props) {\n    const [isModalOpen, setModal] = useState(false);\n\n    const toggleModal = () => {\n        setModal(!isModalOpen);\n        \n    };\n\n    // while a user chooses not to delete a dataset\n    const handlenNoBtn = () => {\n        setModal(!isModalOpen);\n    };\n\n    \n\n    return (\n        <div>\n            <Button style={{ backgroundColor: \"transparent\", border: 'none', color: \"black\" }} onClick={toggleModal}>{props.modelName}</Button>\n\n            <Modal isOpen={isModalOpen} toggle={toggleModal} centered={true}>\n                <ModalHeader toggle={toggleModal}>Binded Datasets</ModalHeader>\n                <ModalBody>\n                    <p>Do you want to check the binded datasets?</p>\n                    <Row>\n                        <Col>\n                            <BindedDatasets modelName={props.modelName} bindedDatasets={props.bindedDatasets}\n                                getBindedDatasets={props.getBindedDatasets} userName={props.userName}\n                                isBindLoading={props.isBindLoading} />\n                        </Col>\n\n                        <Col>\n                            <Button onClick={handlenNoBtn}>No</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </div>\n\n    );\n}\n\nexport default AskBindedDatasets;"]},"metadata":{},"sourceType":"module"}