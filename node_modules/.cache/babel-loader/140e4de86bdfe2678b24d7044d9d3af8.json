{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/MetadataForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { Button, Row, Col, Label, Container } from 'reactstrap';\nimport { Control, LocalForm, Form, Errors, actions } from 'react-redux-form';\nimport { Table } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { Link } from 'react-router-dom';\nimport { Drawer, IconButton, Modal } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport DetailedDataset from './DetailedDatasetComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = '40%';\nconst useStyles = makeStyles(theme => ({\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    overflow: 'auto'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'auto'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  }\n}));\n\nfunction MetadataForm(props) {\n  _s();\n\n  const FileName = localStorage.getItem('datasetname-metadata');\n  console.log(\"local get file name: \", FileName);\n  const BriefInfo = props.metadata.BriefInfo !== \"\" ? props.metadata.BriefInfo : \"Please input a brief description for the dataset\";\n  const Description = props.metadata.Description !== \"\" ? props.metadata.Description : \"Please input a detailed description for the dataset\";\n  const Source = props.metadata.Source !== \"\" ? props.metadata.Source : \"Please input the source\";\n  const Keywords = props.metadata.Keywords.length !== 0 ? String(props.metadata.Keywords) : \"Type and press Enter\";\n  const AttrLen = props.metadata.AttrInfo.length !== 0 ? props.metadata.AttrInfo.length : attr;\n  const AttrInfo = props.metadata.AttrInfo.map(eachAttr => eachAttr);\n  console.log(\"Attr Info check\", AttrInfo);\n  const [tags, setTags] = useState([]);\n  const [attr, setAttr] = useState(AttrLen);\n  const [open, setOpen] = React.useState(true);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = values => {\n    const attrInfo = integrateAttrInfo(attr, values);\n    const fixedValue = fixEmptyForm(values, tags, attrInfo);\n    console.log('Current State is: ' + JSON.stringify(fixedValue)); // 'props.submitMetadata' is from Redux actionCreators, which is used to post the metadata to the backend server\n\n    props.submitMetadata(fixedValue); //alert(`Current State is:  ${JSON.stringify(fixedValue)}`);\n\n    alert(`Submit successfully!`); //props.resetMetadata();\n    //props.fetchDatasetFiles();\n  };\n\n  const TagInputs = tags => {\n    const {\n      model,\n      dispatch\n    } = props;\n    return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n      tags: tags,\n      onChange: newTags => setTags(newTags),\n      onCustomChange: e => dispatch(actions.change(model, e))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  };\n\n  const handleAddClick = () => {\n    setAttr(attr + 1);\n  };\n\n  const handleRemoveClick = () => {\n    if (attr > 1) {\n      setAttr(attr - 1);\n    } else {\n      setAttr(1);\n    }\n  };\n\n  const AttrRow = (attrNum, showButtons) => {\n    const AttrName = AttrInfo[attrNum - 1] == undefined || AttrInfo[attrNum - 1].attrName === \"\" ? \"attribute name\" : AttrInfo[attrNum - 1].attrName;\n    const AttrDescription = AttrInfo[attrNum - 1] == undefined || AttrInfo[attrNum - 1].attrDescription === \"\" ? \"attribute description\" : AttrInfo[attrNum - 1].attrDescription;\n\n    if (showButtons) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          md: 2,\n          className: \"attribute\",\n          htmlFor: \"attrInfo\",\n          children: `Attribute${attrNum}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrName${attrNum}`,\n            id: `.attrName${attrNum}`,\n            name: \"attrName\",\n            placeholder: AttrName,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrDescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrDescription${attrNum}`,\n            id: `.attrDescription${attrNum}`,\n            name: \"attrInfo\",\n            placeholder: AttrDescription,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleAddClick,\n              \"aria-label\": \"add an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleRemoveClick,\n              \"aria-label\": \"remove an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          md: 2,\n          className: \"attribute\",\n          htmlFor: \"attrInfo\",\n          children: `Attribute${attrNum}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrName${attrNum}`,\n            id: `.attrName${attrNum}`,\n            name: \"attrName\",\n            placeholder: AttrName,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrDescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrDescription${attrNum}`,\n            id: `.attrDescription${attrNum}`,\n            name: \"attrInfo\",\n            placeholder: AttrDescription,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"nodisplay\",\n              \"aria-label\": \"add an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"nodisplay\",\n              \"aria-label\": \"remove an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const AttrForm = num => {\n    let arr = [];\n    let attrArray = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(AttrRow(i + 1, false));\n    }\n\n    return arr;\n  }; // this function is for integrate all attribution infos into an array\n  // so that it can be send into the backend server as a whole\n\n\n  const integrateAttrInfo = (attrNum, values) => {\n    let attrInfo = [];\n\n    for (let i = 0; i < attrNum; i++) {\n      let attrIndex = `Attribute${i + 1}`;\n      attrIndex = {\n        // to identify if the attrName exists in the values (meaning if a user input words into it)\n        // if not, then adding \"\" to attrName; if the user inputted, then keep the inputted value\n        attrName: values[`attrName${i + 1}`] == null ? AttrInfo[i].attrName : values[`attrName${i + 1}`],\n        attrDescription: values[`attrDescription${i + 1}`] == null ? AttrInfo[i].attrDescription : values[`attrDescription${i + 1}`]\n      };\n      attrInfo.push(attrIndex);\n    }\n\n    return attrInfo;\n  }; // this function is to fill up \"\" while a user input nothing in a form filed.\n\n\n  const fixEmptyForm = (values, tags, attrInfo) => {\n    let inputForm = [\"FileName\", \"UserName\", \"BriefInfo\", \"Description\", \"Source\", \"Keywords\", \"AttrInfo\"];\n    let fixedForm = [];\n    let fixedValue = {};\n    console.log(\"attr len: \", attrInfo.length);\n    console.log(\"attr info: \", attrInfo);\n\n    const compareAttr = attrInfo => {\n      const result = attrInfo.map((eachAttr, index) => {\n        return eachAttr[\"attrName\"] === \"\" && eachAttr[\"attrDescription\"] === \"\" ? \"null\" : \"not-null\";\n      });\n      console.log(\"attr compare: \", result);\n      return result.includes(\"not-null\");\n    };\n\n    for (let eachForm of inputForm) {\n      switch (eachForm) {\n        case \"FileName\":\n          fixedValue[eachForm] = props.dataset.FileName;\n          break;\n\n        case \"UserName\":\n          fixedValue[eachForm] = props.dataset.UserName;\n          break;\n\n        case \"Keywords\":\n          fixedValue[eachForm] = tags.length === 0 ? props.metadata.Keywords : tags;\n          break;\n\n        case \"AttrInfo\":\n          fixedValue[eachForm] = compareAttr(attrInfo) ? attrInfo : props.metadata.AttrInfo;\n          console.log(\"fixed Attr: \", fixedValue[eachForm]);\n          break;\n\n        /**\n        case \"Label\":\n            fixedValue[eachForm] = values[eachForm] == null ? \"Unknown\" : values[eachForm];\n            break;\n         */\n\n        default:\n          fixedValue[eachForm] = values[eachForm] == null ? props.metadata[eachForm] : values[eachForm];\n      }\n    }\n\n    fixedForm.push(fixedValue);\n    return fixedForm;\n  };\n\n  useEffect(() => {\n    // fetch the existing metadata first\n    console.log(\"start refreshing metadata form\");\n    props.sendNameForDetailedData(FileName, sessionStorage.getItem('verifiedUsername'));\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          backgroundColor: \"#378CC6\"\n        },\n        position: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            className: \"title col-md-11\",\n            children: [\"Data Description - \", FileName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"open drawer\",\n            edge: \"end\",\n            onClick: handleDrawerOpen,\n            className: clsx(open && classes.hide),\n            children: /*#__PURE__*/_jsxDEV(TableChartIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        paddingTop: \"5%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"metadata-info\",\n        children: /*#__PURE__*/_jsxDEV(LocalForm, {\n          onSubmit: values => handleSubmit(values),\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"BriefInfo\",\n                md: \"2\",\n                children: \"Brief descripton:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".BriefInfo\",\n                  id: \"BriefInfo\",\n                  name: \"BriefInfo\",\n                  placeholder: BriefInfo,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"Description\",\n              children: \"Dataset description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 10,\n              children: /*#__PURE__*/_jsxDEV(Control.textarea, {\n                model: \".Description\",\n                id: \"Description\",\n                name: \"Description\",\n                row: \"6\",\n                className: \"form-control\",\n                placeholder: Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"Source\",\n                md: 1,\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".Source\",\n                  id: \"Source\",\n                  name: \"Source\",\n                  placeholder: Source,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"keywords\",\n                md: 2,\n                children: \"Key words:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(ReactTagInput, {\n                  tags: tags,\n                  onChange: newTags => setTags(newTags),\n                  placeholder: Keywords\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Control, {\n                  model: \".keywords\",\n                  id: \"keywords\",\n                  name: \"keywords\",\n                  value: \"test\",\n                  className: \"form-control nodisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"form-group\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: \"aliceblue\",\n                width: \"100%\"\n              },\n              children: \"Attribute Information:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [AttrForm(attr - 1), AttrRow(attr, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-button col-md-4 align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: {\n                backgroundColor: \"#378CC6\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RenderMetadata, {\n        metadata: props.metadata,\n        isLoading: props.isLoading_metadata,\n        errMess: props.errMess_metadata,\n        fileName: FileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RenderDetailedData, {\n        detailedData: props.detailedData,\n        isLoading: props.isLoading_detailedData,\n        errMess: props.errMess_detailedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n} // detail data -> metadata\n\n\n_s(MetadataForm, \"fGtIftdgA+bogMbCIK4q+WhfC4Q=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = MetadataForm;\n\nconst RenderMetadata = ({\n  metadata,\n  isLoading,\n  errMess,\n  fileName\n}) => {\n  console.log(\"check metadata\");\n  console.log(JSON.stringify(metadata));\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this);\n  } else if (errMess) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: errMess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Metadata: \", fileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Dataset description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Number of instances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Number_of_Instance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Number of attributes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Number_of_Attribute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Whether the dataset contains labels:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Keywords.length === 0 ? \"\" : JSON.stringify(metadata.Keywords)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: metadata.AttrInfo.map((eachAttr, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(eachAttr).map(eachValue => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: eachValue\n              }, eachValue, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 79\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c2 = RenderMetadata;\n\nconst RenderDetailedData = ({\n  detailedData,\n  isLoading,\n  errMess\n}) => {\n  // pass the datasetName to the backend server\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }, this);\n  } else if (errMess) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: errMess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }, this);\n  } else {\n    console.log(\"detailed data is:\");\n    console.log(detailedData);\n    const colName = Object.keys(detailedData[Object.keys(detailedData)[0]]);\n    console.log(\"colname is \" + colName);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: colName.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this))\n        }, \"tbhead\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(detailedData).map(row =>\n        /*#__PURE__*/\n        // [row1, row2, row3, row4, row5]\n        _jsxDEV(\"tr\", {\n          children: Object.values(detailedData[row]).map(value => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c3 = RenderDetailedData;\nexport default MetadataForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MetadataForm\");\n$RefreshReg$(_c2, \"RenderMetadata\");\n$RefreshReg$(_c3, \"RenderDetailedData\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/MetadataForm.js"],"names":["React","useRef","useState","useEffect","useLayoutEffect","Button","Row","Col","Label","Container","Control","LocalForm","Form","Errors","actions","Table","Loading","ReactTagInput","Link","Drawer","IconButton","Modal","AddIcon","RemoveIcon","AppBar","Toolbar","TableChartIcon","Typography","clsx","makeStyles","useTheme","ChevronLeftIcon","ChevronRightIcon","Divider","DetailedDataset","drawerWidth","useStyles","theme","hide","display","drawer","width","flexShrink","overflow","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","MetadataForm","props","FileName","localStorage","getItem","console","log","BriefInfo","metadata","Description","Source","Keywords","length","String","AttrLen","AttrInfo","attr","map","eachAttr","tags","setTags","setAttr","open","setOpen","classes","handleDrawerOpen","handleDrawerClose","handleSubmit","values","attrInfo","integrateAttrInfo","fixedValue","fixEmptyForm","JSON","stringify","submitMetadata","alert","TagInputs","model","dispatch","newTags","e","change","handleAddClick","handleRemoveClick","AttrRow","attrNum","showButtons","AttrName","undefined","attrName","AttrDescription","attrDescription","AttrForm","num","arr","attrArray","i","push","attrIndex","inputForm","fixedForm","compareAttr","result","index","includes","eachForm","dataset","UserName","sendNameForDetailedData","sessionStorage","backgroundColor","color","paddingTop","paper","direction","isLoading_metadata","errMess_metadata","detailedData","isLoading_detailedData","errMess_detailedData","RenderMetadata","isLoading","errMess","fileName","Number_of_Instance","Number_of_Attribute","Object","eachValue","RenderDetailedData","colName","keys","col","row","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { Button, Row, Col, Label, Container } from 'reactstrap';\nimport { Control, LocalForm, Form, Errors, actions } from 'react-redux-form';\nimport { Table } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { Link } from 'react-router-dom';\nimport { Drawer, IconButton, Modal } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\n\nimport DetailedDataset from './DetailedDatasetComponent';\n\nconst drawerWidth = '40%';\n\nconst useStyles = makeStyles((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        overflow: 'auto'\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        overflow: 'auto'\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n}));\n\nfunction MetadataForm(props) {\n\n    const FileName = localStorage.getItem('datasetname-metadata');\n    console.log(\"local get file name: \", FileName);\n\n    const BriefInfo = props.metadata.BriefInfo !== \"\" ? props.metadata.BriefInfo : \"Please input a brief description for the dataset\";\n    const Description = props.metadata.Description !== \"\" ? props.metadata.Description : \"Please input a detailed description for the dataset\";\n    const Source = props.metadata.Source !== \"\" ? props.metadata.Source : \"Please input the source\";\n    const Keywords = props.metadata.Keywords.length !== 0 ? String(props.metadata.Keywords) : \"Type and press Enter\";\n    const AttrLen = props.metadata.AttrInfo.length !== 0 ? props.metadata.AttrInfo.length : attr;\n    const AttrInfo = props.metadata.AttrInfo.map(eachAttr => eachAttr);\n    console.log(\"Attr Info check\", AttrInfo);\n\n    const [tags, setTags] = useState([]);\n    const [attr, setAttr] = useState(AttrLen);\n\n    const [open, setOpen] = React.useState(true);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleSubmit = (values) => {\n        const attrInfo = integrateAttrInfo(attr, values);\n        const fixedValue = fixEmptyForm(values, tags, attrInfo);\n        console.log('Current State is: ' + JSON.stringify(fixedValue));\n\n        // 'props.submitMetadata' is from Redux actionCreators, which is used to post the metadata to the backend server\n        props.submitMetadata(fixedValue);\n        //alert(`Current State is:  ${JSON.stringify(fixedValue)}`);\n        alert(`Submit successfully!`);\n        //props.resetMetadata();\n        //props.fetchDatasetFiles();\n    };\n\n    const TagInputs = (tags) => {\n        const { model, dispatch } = props;\n        return <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} onCustomChange={e => dispatch(actions.change(model, e))} />\n    };\n\n    const handleAddClick = () => {\n        setAttr(attr + 1);\n    };\n\n    const handleRemoveClick = () => {\n        if (attr > 1) {\n            setAttr(attr - 1);\n        } else {\n            setAttr(1);\n        }\n    };\n\n    const AttrRow = (attrNum, showButtons) => {\n\n        const AttrName = AttrInfo[attrNum - 1] == undefined || AttrInfo[attrNum - 1].attrName === \"\" ? \"attribute name\" : AttrInfo[attrNum - 1].attrName;\n        const AttrDescription = AttrInfo[attrNum - 1] == undefined || AttrInfo[attrNum - 1].attrDescription === \"\" ? \"attribute description\" : AttrInfo[attrNum - 1].attrDescription;\n\n\n        if (showButtons) {\n            return (\n                <Row>\n                    <Label md={2} className=\"attribute\" htmlFor=\"attrInfo\">{`Attribute${attrNum}: `}</Label>\n                    <Label className=\"attribute\" htmlFor=\"attrName\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrName${attrNum}`} id={`.attrName${attrNum}`} name=\"attrName\" placeholder={AttrName} className=\"form-control\" />\n                    </Col>\n\n                    <Label className=\"attribute\" htmlFor=\"attrDescription\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrDescription${attrNum}`} id={`.attrDescription${attrNum}`} name=\"attrInfo\" placeholder={AttrDescription} className=\"form-control\" />\n                    </Col>\n\n                    <Col>\n                        <Row>\n                            <IconButton onClick={handleAddClick} aria-label=\"add an attribute\" component=\"span\">\n                                <AddIcon />\n                            </IconButton>\n                            <IconButton onClick={handleRemoveClick} aria-label=\"remove an attribute\" component=\"span\">\n                                <RemoveIcon />\n                            </IconButton>\n                        </Row>\n                    </Col>\n                </Row>\n            );\n        }\n        else {\n            return (\n                <Row>\n                    <Label md={2} className=\"attribute\" htmlFor=\"attrInfo\">{`Attribute${attrNum}: `}</Label>\n                    <Label className=\"attribute\" htmlFor=\"attrName\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrName${attrNum}`} id={`.attrName${attrNum}`} name=\"attrName\" placeholder={AttrName} className=\"form-control\" />\n                    </Col>\n\n                    <Label className=\"attribute\" htmlFor=\"attrDescription\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrDescription${attrNum}`} id={`.attrDescription${attrNum}`} name=\"attrInfo\" placeholder={AttrDescription} className=\"form-control\" />\n                    </Col>\n\n                    <Col>\n                        <Row>\n                            <IconButton className=\"nodisplay\" aria-label=\"add an attribute\" component=\"span\">\n                                <AddIcon />\n                            </IconButton>\n                            <IconButton className=\"nodisplay\" aria-label=\"remove an attribute\" component=\"span\">\n                                <RemoveIcon />\n                            </IconButton>\n                        </Row>\n                    </Col>\n                </Row>\n            );\n        }\n\n    };\n\n    const AttrForm = (num) => {\n        let arr = [];\n        let attrArray = [];\n        for (let i = 0; i < num; i++) {\n            arr.push(AttrRow(i + 1, false));\n        }\n        return arr;\n    };\n\n    // this function is for integrate all attribution infos into an array\n    // so that it can be send into the backend server as a whole\n    const integrateAttrInfo = (attrNum, values) => {\n        let attrInfo = [];\n\n        for (let i = 0; i < attrNum; i++) {\n            let attrIndex = `Attribute${i + 1}`;\n\n            attrIndex = {\n                // to identify if the attrName exists in the values (meaning if a user input words into it)\n                // if not, then adding \"\" to attrName; if the user inputted, then keep the inputted value\n                attrName: values[`attrName${i + 1}`] == null ? AttrInfo[i].attrName : values[`attrName${i + 1}`],\n                attrDescription: values[`attrDescription${i + 1}`] == null ? AttrInfo[i].attrDescription : values[`attrDescription${i + 1}`]\n            };\n\n            attrInfo.push(attrIndex);\n        }\n        return attrInfo;\n    };\n\n    // this function is to fill up \"\" while a user input nothing in a form filed.\n    const fixEmptyForm = (values, tags, attrInfo) => {\n        let inputForm = [\"FileName\", \"UserName\", \"BriefInfo\", \"Description\", \"Source\", \"Keywords\", \"AttrInfo\"]\n        let fixedForm = [];\n        let fixedValue = {};\n        console.log(\"attr len: \", attrInfo.length);\n        console.log(\"attr info: \", attrInfo);\n\n        const compareAttr = (attrInfo) => {\n            const result = attrInfo.map((eachAttr, index) => {\n                return eachAttr[\"attrName\"] === \"\" && eachAttr[\"attrDescription\"] === \"\" ? \"null\" : \"not-null\"\n            })\n            console.log(\"attr compare: \", result);\n            return result.includes(\"not-null\");\n        }\n\n        for (let eachForm of inputForm) {\n            switch (eachForm) {\n                case \"FileName\":\n                    fixedValue[eachForm] = props.dataset.FileName;\n                    break;\n                case \"UserName\":\n                    fixedValue[eachForm] = props.dataset.UserName;\n                    break;\n                case \"Keywords\":\n                    fixedValue[eachForm] = tags.length === 0 ? props.metadata.Keywords : tags\n                    break;\n                case \"AttrInfo\":\n                    fixedValue[eachForm] = compareAttr(attrInfo) ? attrInfo : props.metadata.AttrInfo;\n                    console.log(\"fixed Attr: \", fixedValue[eachForm]);\n                    break;\n                /**\n                case \"Label\":\n                    fixedValue[eachForm] = values[eachForm] == null ? \"Unknown\" : values[eachForm];\n                    break;\n                 */\n                default:\n                    fixedValue[eachForm] = values[eachForm] == null ? props.metadata[eachForm] : values[eachForm];\n            }\n        }\n        fixedForm.push(fixedValue);\n\n        return fixedForm;\n    };\n\n    useEffect(() => {\n        // fetch the existing metadata first\n        console.log(\"start refreshing metadata form\")\n        props.sendNameForDetailedData(FileName, sessionStorage.getItem('verifiedUsername'));\n    });\n\n    return (\n        <Container>\n            <Row>\n                <AppBar style={{ backgroundColor: \"#378CC6\" }} position=\"relative\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap className=\"title col-md-11\">\n                            Data Description - {FileName}\n                        </Typography>\n                        <IconButton aria-label=\"open drawer\" edge=\"end\"\n                            onClick={handleDrawerOpen}\n                            className={clsx(open && classes.hide)}>\n                            <TableChartIcon style={{ color: \"white\" }} />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n            </Row>\n\n            <Row style={{ paddingTop: \"5%\" }}>\n                <Col className=\"metadata-info\">\n\n                    <LocalForm onSubmit={(values) => handleSubmit(values)}>\n                        <Col className=\"form-group\">\n                            <Row>\n                                <Label htmlFor=\"BriefInfo\" md=\"2\">Brief descripton:</Label>\n                                <Col>\n                                    <Control.text model=\".BriefInfo\" id=\"BriefInfo\" name=\"BriefInfo\"\n                                        placeholder={BriefInfo}\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                        </Col>\n\n                        <Col className=\"form-group\">\n                            <Label htmlFor=\"Description\">Dataset description:</Label>\n                            <Col md={10}>\n                                <Control.textarea model=\".Description\" id=\"Description\" name=\"Description\"\n                                    row=\"6\" className=\"form-control\" placeholder={Description} />\n                            </Col>\n                        </Col>\n\n                        <Col className=\"form-group\">\n                            <Row>\n                                <Label htmlFor=\"Source\" md={1}>Source:</Label>\n                                <Col>\n                                    <Control.text model=\".Source\" id=\"Source\" name=\"Source\"\n                                        placeholder={Source}\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                        </Col>\n\n                        {/** \n                        <Row className=\"form-group\">\n                            <Col md={5}>\n                                <Label htmlFor=\"Number_of_Instance\" md={10}>Number of instances:</Label>\n                                <Col md={4}>\n                                    <Control.input model=\".Number_of_Instance\" id=\"Number_of_Instance\" name=\"Number_of_Instance\"\n                                        className=\"form-control\"\n                                        min=\"0\" type=\"number\" step=\"1\" />\n                                </Col>\n                            </Col>\n\n                            <Col md={5}>\n                                <Label htmlFor=\"Number_of_Attribute\" md={10}>Number of attributes:</Label>\n                                <Col md={4}>\n                                    <Control.input model=\".Number_of_Attribute\" id=\"Number_of_Attribute\" name=\"Number_of_Attribute\"\n                                        className=\"form-control\"\n                                        min=\"0\" type=\"number\" step=\"1\" />\n                                </Col>\n                            </Col>\n                        </Row>\n\n                        <Col className=\"form-group\">\n                            <Row>\n                                <Label md={4}>Whether the dataset containes labels:</Label>\n                                <Col md={2}>\n                                    <Control.select model=\".Label\" id=\"Label\" name=\"Label\"\n                                        className=\"form-control\">\n                                        <option>Unknown</option>\n                                        <option>Yes</option>\n                                        <option>No</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                        </Col>\n                        */}\n\n                        <Col className=\"form-group\">\n                            <Row>\n                                <Label htmlFor=\"keywords\" md={2}>Key words:</Label>\n                                <Col>\n                                    <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} placeholder={Keywords} />\n                                    <Control model=\".keywords\" id=\"keywords\" name=\"keywords\"\n                                        value=\"test\" className=\"form-control nodisplay\" />\n                                </Col>\n                            </Row>\n                        </Col>\n\n                        <Col className=\"form-group\"> {/**for loop */}\n                            <Label style={{ backgroundColor: \"aliceblue\", width: \"100%\" }}>Attribute Information:</Label>\n                            <Col>\n                                {AttrForm(attr - 1)}\n                                {AttrRow(attr, true)}\n                            </Col>\n                        </Col>\n\n                        <div className=\"submit-button col-md-4 align-items-center\">\n                            <Button type=\"submit\" style={{ backgroundColor: \"#378CC6\" }}>Submit</Button>\n                        </div>\n\n                    </LocalForm>\n\n\n                </Col>\n            </Row>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}>\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />   \n            \n                <RenderMetadata metadata={props.metadata} isLoading={props.isLoading_metadata} errMess={props.errMess_metadata}\n                        fileName={FileName} />\n                <RenderDetailedData detailedData={props.detailedData} isLoading={props.isLoading_detailedData} errMess={props.errMess_detailedData} />\n            </Drawer>\n        </Container>\n    );\n}\n\n// detail data -> metadata\nconst RenderMetadata = ({ metadata, isLoading, errMess, fileName }) => {\n    console.log(\"check metadata\");\n    console.log(JSON.stringify(metadata));\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return (\n            <Container>\n                <Row>\n                    <Table size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Metadata: {fileName}</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>Dataset description:</td>\n                                <td>{metadata.Description}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">2</th>\n                                <td>Source:</td>\n                                <td>{metadata.Source}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">3</th>\n                                <td>Number of instances</td>\n                                <td>{metadata.Number_of_Instance}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">4</th>\n                                <td>Number of attributes:</td>\n                                <td>{metadata.Number_of_Attribute}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">5</th>\n                                <td>Whether the dataset contains labels:</td>\n                                <td>{metadata.Label}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">6</th>\n                                <td>Keywords:</td>\n                                <td>{metadata.Keywords.length === 0 ? \"\" : JSON.stringify(metadata.Keywords)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Row>\n\n                <Row>\n                    <Table size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Attributes</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {metadata.AttrInfo.map((eachAttr, index) =>\n                                <tr key={index}>\n                                    {Object.values(eachAttr).map(eachValue => <td key={eachValue}>{eachValue}</td>)}\n                                </tr>\n                            )}\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        );\n    }\n};\n\nconst RenderDetailedData = ({ detailedData, isLoading, errMess }) => {\n    // pass the datasetName to the backend server\n\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        console.log(\"detailed data is:\");\n        console.log(detailedData);\n        const colName = Object.keys(detailedData[Object.keys(detailedData)[0]]);\n        console.log(\"colname is \" + colName);\n        return (\n            <Table striped>\n                <thead>\n                    <tr key=\"tbhead\">\n                        {colName.map(col =>\n                            <th key={col}>{col}</th>\n                        )}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {Object.keys(detailedData).map(row => // [row1, row2, row3, row4, row5]\n                        <tr>\n                            {Object.values(detailedData[row]).map(value =>\n                                <td>{value}</td>\n                            )}\n                        </tr>\n                    )}\n                </tbody>\n\n            </Table>\n        );\n    }\n};\n\n\nexport default MetadataForm;"]},"metadata":{},"sourceType":"module"}