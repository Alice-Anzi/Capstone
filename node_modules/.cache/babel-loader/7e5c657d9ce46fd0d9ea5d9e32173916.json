{"ast":null,"code":"var _jsxFileName = \"/Users/liuanzi/Desktop/Capstone/som/src/components/DetailedDatasetComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport qs from 'querystring';\nimport { emptyMetadata } from '../redux/metadataEmpty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderDetailedData = ({\n  detailedData,\n  isLoading,\n  errMess\n}) => {\n  // pass the datasetName to the backend server\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } else if (errMess) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: errMess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  } else {\n    console.log(\"detailed data is:\");\n    console.log(detailedData);\n    const colName = Object.keys(detailedData[Object.keys(detailedData)[0]]);\n    console.log(\"colname is \" + colName);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          backgroundColor: '#FFE399',\n          color: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: colName.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this))\n        }, \"tbhead\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(detailedData).map(row =>\n        /*#__PURE__*/\n        // [row1, row2, row3, row4, row5]\n        _jsxDEV(\"tr\", {\n          children: Object.values(detailedData[row]).map(value => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = RenderDetailedData;\n\nconst RenderMetadata = ({\n  metadata,\n  isLoading,\n  errMess,\n  fileName\n}) => {\n  console.log(\"check metadata\");\n  console.log(JSON.stringify(metadata));\n  console.log(\"check filename: \", fileName);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  } else if (errMess) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: errMess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#FFE399',\n              color: \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Metadata: \", fileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Dataset description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Number of instances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Number_of_Instance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Number of attributes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Number_of_Attribute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: metadata.Keywords.length === 0 ? \"\" : JSON.stringify(metadata.Keywords)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#FFE399',\n              color: \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: metadata.AttrInfo.map((eachAttr, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(eachAttr).map(eachValue => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: eachValue\n              }, eachValue, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 79\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c2 = RenderMetadata;\n\nconst DetailedDataset = props => {\n  _s();\n\n  //const FileName = localStorage.getItem('datasetname-detaileddata');\n  const query = qs.parse(window.location.search.split('?')[1] || '');\n  const FileName = query.fileName || localStorage.getItem('datasetname-detaileddata');\n  console.log(\"local get file name: \", FileName);\n  useEffect(() => {\n    props.sendNameForDetailedData(FileName, query.userName);\n  }); //useEffect(() => {\n  //props.sendNameForDetailedData(props.selectedDataset, sessionStorage.getItem('verifiedUsername'));\n  //});\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"detailed-metadata\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(RenderMetadata, {\n          metadata: props.metadata,\n          isLoading: props.isLoading_metadata,\n          errMess: props.errMess_metadata,\n          fileName: FileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"detailed-database\",\n      children: /*#__PURE__*/_jsxDEV(RenderDetailedData, {\n        detailedData: props.detailedData,\n        isLoading: props.isLoading_detailedData,\n        errMess: props.errMess_detailedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedDataset, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = DetailedDataset;\nexport default DetailedDataset;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RenderDetailedData\");\n$RefreshReg$(_c2, \"RenderMetadata\");\n$RefreshReg$(_c3, \"DetailedDataset\");","map":{"version":3,"sources":["/Users/liuanzi/Desktop/Capstone/som/src/components/DetailedDatasetComponent.js"],"names":["React","Component","useEffect","useRef","useState","Container","Row","Col","Table","Loading","qs","emptyMetadata","RenderDetailedData","detailedData","isLoading","errMess","console","log","colName","Object","keys","backgroundColor","color","map","col","row","values","value","RenderMetadata","metadata","fileName","JSON","stringify","Description","Source","Number_of_Instance","Number_of_Attribute","Keywords","length","AttrInfo","eachAttr","index","eachValue","DetailedDataset","props","query","parse","window","location","search","split","FileName","localStorage","getItem","sendNameForDetailedData","userName","isLoading_metadata","errMess_metadata","isLoading_detailedData","errMess_detailedData"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useRef, useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport qs from 'querystring';\nimport {emptyMetadata} from '../redux/metadataEmpty';\n\nconst RenderDetailedData = ({ detailedData, isLoading, errMess }) => {\n    // pass the datasetName to the backend server\n\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        console.log(\"detailed data is:\");\n        console.log(detailedData);\n        const colName = Object.keys(detailedData[Object.keys(detailedData)[0]]);\n        console.log(\"colname is \" + colName);\n        return (\n            <Table striped>\n                <thead style={{backgroundColor: '#FFE399', color: \"black\"}}>\n                    <tr key=\"tbhead\">\n                        {colName.map(col =>\n                            <th key={col}>{col}</th>\n                        )}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {Object.keys(detailedData).map(row => // [row1, row2, row3, row4, row5]\n                        <tr>\n                            {Object.values(detailedData[row]).map(value =>\n                                <td>{value}</td>\n                            )}\n                        </tr>\n                    )}\n                </tbody>\n\n            </Table>\n        );\n    }\n};\n\nconst RenderMetadata = ({ metadata, isLoading, errMess, fileName }) => {\n    console.log(\"check metadata\");\n    console.log(JSON.stringify(metadata));\n    console.log(\"check filename: \", fileName)\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else{\n        return (\n            <Container>\n                <Row>\n                    <Table size=\"sm\">\n                        <thead style={{backgroundColor: '#FFE399', color: \"black\"}}>\n                            <tr>\n                                <th>#</th>\n                                <th>Metadata: {fileName}</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n    \n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>Dataset description:</td>\n                                <td>{metadata.Description}</td>\n                            </tr>\n    \n                            <tr>\n                                <th scope=\"row\">2</th>\n                                <td>Source:</td>\n                                <td>{metadata.Source}</td>\n                            </tr>\n    \n                            <tr>\n                                <th scope=\"row\">3</th>\n                                <td>Number of instances</td>\n                                <td>{metadata.Number_of_Instance}</td>\n                            </tr>\n    \n                            <tr>\n                                <th scope=\"row\">4</th>\n                                <td>Number of attributes:</td>\n                                <td>{metadata.Number_of_Attribute}</td>\n                            </tr>\n\n                            <tr>\n                                <th scope=\"row\">6</th>\n                                <td>Keywords:</td>\n                                <td>{metadata.Keywords.length === 0 ? \"\" : JSON.stringify(metadata.Keywords)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Row>\n    \n                <Row>\n                    <Table size=\"sm\">\n                        <thead style={{backgroundColor: '#FFE399', color: \"black\"}}>\n                            <tr>\n                                <th>Attributes</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {metadata.AttrInfo.map((eachAttr, index) =>\n                                <tr key={index}>\n                                    {Object.values(eachAttr).map(eachValue => <td key={eachValue}>{eachValue}</td>)}\n                                </tr>\n                            )}\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        );\n    }\n};\n   \n\nconst DetailedDataset = (props) => {\n    //const FileName = localStorage.getItem('datasetname-detaileddata');\n    const query = qs.parse(window.location.search.split('?')[1]||'')\n    const FileName = query.fileName||localStorage.getItem('datasetname-detaileddata');\n    console.log(\"local get file name: \", FileName);\n\n    useEffect(() => {\n        props.sendNameForDetailedData(FileName, query.userName);\n    });\n    \n    //useEffect(() => {\n        //props.sendNameForDetailedData(props.selectedDataset, sessionStorage.getItem('verifiedUsername'));\n    //});\n    \n    return (\n        <Container>\n            <Col className=\"detailed-metadata\" >\n                <Col>\n                    <RenderMetadata metadata={props.metadata} isLoading={props.isLoading_metadata} errMess={props.errMess_metadata}\n                        fileName={FileName} />\n                </Col>\n            </Col>\n\n            <Col className=\"detailed-database\">\n                <RenderDetailedData detailedData={props.detailedData} isLoading={props.isLoading_detailedData} errMess={props.errMess_detailedData} />\n            </Col>\n        </Container>\n    );\n};\n\nexport default DetailedDataset;"]},"metadata":{},"sourceType":"module"}